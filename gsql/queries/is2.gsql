CREATE OR REPLACE QUERY is2(VERTEX<Person> personId) FOR GRAPH ldbc_snb syntax v2 {
  TYPEDEF TUPLE<INT messageId, STRING messageContent, DATETIME messageCreationDate, INT originalPostId, INT originalPostAuthorId, STRING originalPostAuthorFirstName, STRING originalPostAuthorLastName> ogPostInfo;

  SumAccum<INT> @postId, @authorOgId;
  SumAccum<STRING> @messageContent, @authorOgFN, @authorOgLN;
  HeapAccum<ogPostInfo>(10, messageCreationDate DESC, messageId DESC) @@ogPostInfoTop;

  vPerson = { personId };
  vMessage =
    SELECT t
    FROM vPerson:s -(<HAS_CREATOR)- (Comment|Post):t
    ORDER BY t.creationDate DESC, t.id DESC
    LIMIT 10;

  accMessage =
    SELECT s
    FROM vMessage:s -(REPLY_OF>*)- Post:t1 -(HAS_CREATOR>)- Person:t2
    PER(s,t1,t2)
    ACCUM
      IF s.type == "Comment" OR s.content != "" THEN
        s.@messageContent = s.content
      ELSE
        s.@messageContent = t1.imageFile
      END,
      s.@postId = t1.id,
      s.@authorOgId = t2.id,
      s.@authorOgFN = t2.firstName,
      s.@authorOgLN = t2.lastName
    POST-ACCUM @@ogPostInfoTop += ogPostInfo(s.id, s.@messageContent,
            s.creationDate, s.@postId, s.@authorOgId, s.@authorOgFN, s.@authorOgLN);

  PRINT @@ogPostInfoTop;
}
//INSTALL QUERY is2
//RUN QUERY is2(933)

